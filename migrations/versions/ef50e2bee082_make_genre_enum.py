"""make genre enum

Revision ID: ef50e2bee082
Revises: 54926fba16c4
Create Date: 2024-03-26 21:05:35.128632

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ef50e2bee082'
down_revision = '54926fba16c4'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE TYPE genre AS ENUM ('Alternative', 'Blues', 'Classical', 'Country', 'Electronic', 'Folk', 'Funk', 'Hip-Hop', 'Heavy Metal', 'Instrumental', 'Jazz', 'Musical Theatre', 'Pop', 'Punk', 'R&B', 'Reggae', 'Rock n Roll', 'Soul', 'Swing', 'Other')")
    with op.batch_alter_table('artist_genre', schema=None) as batch_op:
        batch_op.add_column(sa.Column('genre', sa.Enum('Alternative', 'Blues', 'Classical', 'Country', 'Electronic', 'Folk', 'Funk', 'Hip-Hop', 'Heavy Metal', 'Instrumental', 'Jazz', 'Musical Theatre', 'Pop', 'Punk', 'R&B', 'Reggae', 'Rock n Roll', 'Soul', 'Swing', 'Other', name='genre'), nullable=True))
    with op.batch_alter_table('artist_genre', schema=None) as batch_op:        
        batch_op.execute("""
            UPDATE artist_genre SET genre = CASE
                WHEN genre_id = 1 THEN 'Jazz'::genre
                WHEN genre_id = 2 THEN 'Reggae'::genre
                WHEN genre_id = 3 THEN 'Swing'::genre
                WHEN genre_id = 4 THEN 'Classical'::genre
                WHEN genre_id = 5 THEN 'Folk'::genre
                WHEN genre_id = 6 THEN 'R&B'::genre
                WHEN genre_id = 7 THEN 'Hip-Hop'::genre
                WHEN genre_id = 8 THEN 'Rock n Roll'::genre
                ELSE 'Other'::genre
                END;
        """)
        batch_op.alter_column(
            'genre',
            existing_type=sa.Enum('Alternative', 'Blues', 'Classical', 'Country', 'Electronic', 'Folk', 'Funk', 'Hip-Hop', 'Heavy Metal', 'Instrumental', 'Jazz', 'Musical Theatre', 'Pop', 'Punk', 'R&B', 'Reggae', 'Rock n Roll', 'Soul', 'Swing', 'Other', name='genre'),
            nullable=False)
        batch_op.drop_constraint('artist_genre_genre_id_fkey', type_='foreignkey')
    with op.batch_alter_table('artist_genre', schema=None) as batch_op:
        batch_op.drop_column('genre_id')

    with op.batch_alter_table('venue_genre', schema=None) as batch_op:
        batch_op.add_column(sa.Column('genre', sa.Enum('Alternative', 'Blues', 'Classical', 'Country', 'Electronic', 'Folk', 'Funk', 'Hip-Hop', 'Heavy Metal', 'Instrumental', 'Jazz', 'Musical Theatre', 'Pop', 'Punk', 'R&B', 'Reggae', 'Rock n Roll', 'Soul', 'Swing', 'Other', name='genre'), nullable=True))
    with op.batch_alter_table('venue_genre', schema=None) as batch_op:        
        batch_op.execute("""
            UPDATE venue_genre SET genre = CASE
                WHEN genre_id = 1 THEN 'Jazz'::genre
                WHEN genre_id = 2 THEN 'Reggae'::genre
                WHEN genre_id = 3 THEN 'Swing'::genre
                WHEN genre_id = 4 THEN 'Classical'::genre
                WHEN genre_id = 5 THEN 'Folk'::genre
                WHEN genre_id = 6 THEN 'R&B'::genre
                WHEN genre_id = 7 THEN 'Hip-Hop'::genre
                WHEN genre_id = 8 THEN 'Rock n Roll'::genre
                ELSE 'Other'::genre
                END;
        """)
        batch_op.alter_column(
            'genre',
            existing_type=sa.Enum('Alternative', 'Blues', 'Classical', 'Country', 'Electronic', 'Folk', 'Funk', 'Hip-Hop', 'Heavy Metal', 'Instrumental', 'Jazz', 'Musical Theatre', 'Pop', 'Punk', 'R&B', 'Reggae', 'Rock n Roll', 'Soul', 'Swing', 'Other', name='genre'),
            nullable=False)
        batch_op.drop_constraint('venue_genre_genre_id_fkey', type_='foreignkey')
    with op.batch_alter_table('venue_genre', schema=None) as batch_op:
        batch_op.drop_column('genre_id')

    op.drop_table('genres')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('genres',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='genres_pkey'),
    sa.UniqueConstraint('name', name='genres_name_key')
    )
    op.execute("""
        INSERT INTO genres (id, name) VALUES (1, 'Jazz'), (2, 'Reggae'), (3, 'Swing'),
            (4, 'Classical'), (5, 'Folk'), (6, 'R&B'), (7, 'Hip-Hop'), (8, 'Rock n Roll');
    """)
    with op.batch_alter_table('venue_genre', schema=None) as batch_op:
        batch_op.add_column(sa.Column('genre_id', sa.INTEGER(), autoincrement=False, nullable=True))
    with op.batch_alter_table('venue_genre', schema=None) as batch_op:        
        batch_op.execute("""
            UPDATE venue_genre
            SET genre_id = CASE
                WHEN genre = 'Jazz' THEN 1
                    WHEN genre = 'Reggae' THEN 2
                    WHEN genre = 'Swing' THEN 3
                    WHEN genre = 'Classical' THEN 4
                    WHEN genre = 'Folk' THEN 5
                    WHEN genre = 'R&B' THEN 6
                    WHEN genre = 'Hip-Hop' THEN 7
                    ELSE 8
                END;
        """)
        batch_op.alter_column('genre_id', existing_type=sa.INTEGER(), nullable=False)
        batch_op.create_foreign_key('venue_genre_genre_id_fkey', 'genres', ['genre_id'], ['id'])
        batch_op.drop_column('genre')

    with op.batch_alter_table('artist_genre', schema=None) as batch_op:
        batch_op.add_column(sa.Column('genre_id', sa.INTEGER(), autoincrement=False, nullable=True))
    with op.batch_alter_table('artist_genre', schema=None) as batch_op:
        batch_op.execute("""
            UPDATE artist_genre
            SET genre_id = CASE
                WHEN genre = 'Jazz' THEN 1
                    WHEN genre = 'Reggae' THEN 2
                    WHEN genre = 'Swing' THEN 3
                    WHEN genre = 'Classical' THEN 4
                    WHEN genre = 'Folk' THEN 5
                    WHEN genre = 'R&B' THEN 6
                    WHEN genre = 'Hip-Hop' THEN 7
                    ELSE 8
                END;
        """)
        batch_op.alter_column('genre_id', existing_type=sa.INTEGER(), nullable=False)
        batch_op.create_foreign_key('artist_genre_genre_id_fkey', 'genres', ['genre_id'], ['id'])
        batch_op.drop_column('genre')
    op.execute("""
        DROP TYPE genre;
    """)
    # ### end Alembic commands ###
